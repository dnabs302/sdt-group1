import scipy.stats as stats

class SignalDetection:
    def __init__(self, hits, misses, false_alarms, correct_rejections):
        """
        Initialize the Signal Detection class with required counts.
        
        :param hits: Number of correctly detected signals
        :param misses: Number of signals missed
        :param false_alarms: Number of noise trials incorrectly detected as signals
        :param correct_rejections: Number of correctly identified noise trials
        """
        self.hits = hits
        self.misses = misses
        self.false_alarms = false_alarms
        self.correct_rejections = correct_rejections

    def hit_rate(self):
        """Calculate the hit rate (H), ensuring values stay within a valid range to avoid math errors."""
        total_signals = self.hits + self.misses
        H = self.hits / total_signals if total_signals > 0 else 0.0001
        return min(max(H, 0.0001), 0.9999)  # Prevents ppf() errors at 0 or 1

    def false_alarm_rate(self):
        """Calculate the false alarm rate (FA), ensuring values stay within a valid range to avoid math errors."""
        total_noises = self.false_alarms + self.correct_rejections
        FA = self.false_alarms / total_noises if total_noises > 0 else 0.0001
        return min(max(FA, 0.0001), 0.9999)  # Prevents ppf() errors at 0 or 1

    def d_prime(self):
        """Compute d-prime (d'), the difference in z-scores of hit rate and false alarm rate."""
        H = self.hit_rate()
        FA = self.false_alarm_rate()
        return stats.norm.ppf(H) - stats.norm.ppf(FA)

    def criterion(self):
        """Compute criterion (C), which measures decision bias."""
        H = self.hit_rate()
        FA = self.false_alarm_rate()
        return -0.5 * (stats.norm.ppf(H) + stats.norm.ppf(FA))

# Example usage (you can replace these values with test cases)
if __name__ == "__main__":
    sd = SignalDetection(15, 10, 15, 5)
    print("d-prime:", sd.d_prime())      # Should match expected test values
    print("Criterion:", sd.criterion())  # Should match expected test values

